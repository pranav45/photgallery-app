{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pranavmainkar/Sites/photo-gallery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pranavmainkar/Sites/photo-gallery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function base64FromPath(_x) {\n  return _base64FromPath.apply(this, arguments);\n}\n\nfunction _base64FromPath() {\n  _base64FromPath = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n    var response, blob;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(path);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.blob();\n\n          case 5:\n            blob = _context.sent;\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var reader = new FileReader();\n              reader.onerror = reject;\n\n              reader.onload = function () {\n                if (typeof reader.result === 'string') {\n                  resolve(reader.result);\n                } else {\n                  reject('method did not return a string');\n                }\n              };\n\n              reader.readAsDataURL(blob);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _base64FromPath.apply(this, arguments);\n}","map":{"version":3,"sources":["../../src/filesystem/utils.ts"],"names":[],"mappings":";;AACA,gBAAsB,cAAtB;AAAA;AAAA;;;6EAAO,iBAA8B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkB,KAAK,CAAC,IAAD,CADvB;;AAAA;AACC,YAAA,QADD;AAAA;AAAA,mBAEc,QAAQ,CAAC,IAAT,EAFd;;AAAA;AAEC,YAAA,IAFD;AAAA,6CAGE,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,kBAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;AACA,cAAA,MAAM,CAAC,OAAP,GAAiB,MAAjB;;AACA,cAAA,MAAM,CAAC,MAAP,GAAgB,YAAK;AACnB,oBAAI,OAAO,MAAM,CAAC,MAAd,KAAyB,QAA7B,EAAuC;AACrC,kBAAA,OAAO,CAAC,MAAM,CAAC,MAAR,CAAP;AACD,iBAFD,MAEO;AACL,kBAAA,MAAM,CAAC,gCAAD,CAAN;AACD;AACF,eAND;;AAOA,cAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;AACD,aAXM,CAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourceRoot":"","sourcesContent":["export async function base64FromPath(path) {\n    const response = await fetch(path);\n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader;\n        reader.onerror = reject;\n        reader.onload = () => {\n            if (typeof reader.result === 'string') {\n                resolve(reader.result);\n            }\n            else {\n                reject('method did not return a string');\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}