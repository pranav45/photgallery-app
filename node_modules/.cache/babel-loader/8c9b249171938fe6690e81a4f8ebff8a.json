{"ast":null,"code":"import { Plugins } from '@capacitor/core';\nimport { notAvailable } from '../util/models';\nimport { isFeatureAvailable, featureNotAvailableError } from '../util/feature-check';\nimport { useState } from 'react';\n;\nexport const availableFeatures = {\n  getPhoto: isFeatureAvailable('Camera', 'getPhoto')\n};\nexport function useCamera() {\n  const {\n    Camera\n  } = Plugins;\n  const [photo, setPhoto] = useState();\n\n  if (!availableFeatures.getPhoto) {\n    return Object.assign({\n      getPhoto: featureNotAvailableError\n    }, notAvailable);\n  }\n\n  async function getPhoto(options) {\n    const cameraPhoto = await Camera.getPhoto(options);\n    setPhoto(cameraPhoto);\n    return cameraPhoto;\n  }\n\n  return {\n    photo,\n    getPhoto,\n    isAvailable: true\n  };\n}","map":{"version":3,"sources":["../../src/camera/useCamera.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAoD,iBAApD;AACA,SAA0B,YAA1B,QAA8C,gBAA9C;AACA,SAAS,kBAAT,EAA6B,wBAA7B,QAA6D,uBAA7D;AACA,SAAS,QAAT,QAAyB,OAAzB;AAKC;AAED,OAAO,MAAM,iBAAiB,GAAG;AAC/B,EAAA,QAAQ,EAAE,kBAAkB,CAAC,QAAD,EAAW,UAAX;AADG,CAA1B;AAIP,OAAM,SAAU,SAAV,GAAmB;AACvB,QAAM;AAAE,IAAA;AAAF,MAAa,OAAnB;AAEA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,EAAlC;;AAEA,MAAG,CAAC,iBAAiB,CAAC,QAAtB,EAAgC;AAC9B,WAAA,MAAA,CAAA,MAAA,CAAA;AACE,MAAA,QAAQ,EAAE;AADZ,KAAA,EAEK,YAFL,CAAA;AAID;;AAED,iBAAe,QAAf,CAAwB,OAAxB,EAA8C;AAC5C,UAAM,WAAW,GAAG,MAAM,MAAM,CAAC,QAAP,CAAgB,OAAhB,CAA1B;AACA,IAAA,QAAQ,CAAC,WAAD,CAAR;AACA,WAAO,WAAP;AACD;;AAED,SAAO;AACL,IAAA,KADK;AAEL,IAAA,QAFK;AAGL,IAAA,WAAW,EAAE;AAHR,GAAP;AAKD","sourceRoot":"","sourcesContent":["import { Plugins } from '@capacitor/core';\nimport { notAvailable } from '../util/models';\nimport { isFeatureAvailable, featureNotAvailableError } from '../util/feature-check';\nimport { useState } from 'react';\n;\nexport const availableFeatures = {\n    getPhoto: isFeatureAvailable('Camera', 'getPhoto')\n};\nexport function useCamera() {\n    const { Camera } = Plugins;\n    const [photo, setPhoto] = useState();\n    if (!availableFeatures.getPhoto) {\n        return Object.assign({ getPhoto: featureNotAvailableError }, notAvailable);\n    }\n    async function getPhoto(options) {\n        const cameraPhoto = await Camera.getPhoto(options);\n        setPhoto(cameraPhoto);\n        return cameraPhoto;\n    }\n    return {\n        photo,\n        getPhoto,\n        isAvailable: true\n    };\n}\n//# sourceMappingURL=useCamera.js.map"]},"metadata":{},"sourceType":"module"}