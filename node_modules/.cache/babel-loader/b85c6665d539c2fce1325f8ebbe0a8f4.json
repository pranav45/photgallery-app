{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pranavmainkar/Sites/photogallery-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pranavmainkar/Sites/photogallery-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useCallback } from 'react';\nimport { Plugins } from '@capacitor/core';\nimport { isFeatureAvailable } from '../util/feature-check';\nexport var availableFeatures = {\n  useFileSystem: isFeatureAvailable('FileSystem', 'useFileSystem')\n};\nexport function useFilesystem() {\n  var Filesystem = Plugins.Filesystem;\n  var getUri = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Filesystem.getUri(options);\n\n            case 2:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var deleteFile = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Filesystem.deleteFile(options);\n\n            case 2:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var readFile = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(options) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Filesystem.readFile(options);\n\n            case 2:\n              result = _context3.sent;\n              return _context3.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), []);\n  var writeFile = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return Filesystem.writeFile(options);\n\n            case 2:\n              result = _context4.sent;\n              return _context4.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  return {\n    getUri: getUri,\n    deleteFile: deleteFile,\n    readFile: readFile,\n    writeFile: writeFile,\n    isAvailable: true\n  };\n}","map":{"version":3,"sources":["../../src/filesystem/useFileSystem.ts"],"names":[],"mappings":";;AACA,SAAS,WAAT,QAA4B,OAA5B;AACA,SAAS,OAAT,QAA8J,iBAA9J;AAEA,SAAS,kBAAT,QAAmC,uBAAnC;AASA,OAAO,IAAM,iBAAiB,GAAG;AAC/B,EAAA,aAAa,EAAE,kBAAkB,CAAC,YAAD,EAAe,eAAf;AADF,CAA1B;AAIP,OAAM,SAAU,aAAV,GAAuB;AAAA,MACnB,UADmB,GACJ,OADI,CACnB,UADmB;AAG3B,MAAM,MAAM,GAAG,WAAW;AAAA,wEAAC,iBAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJ,UAAU,CAAC,MAAX,CAAkB,OAAlB,CADI;;AAAA;AACnB,cAAA,MADmB;AAAA,+CAElB,MAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAGvB,EAHuB,CAA1B;AAKA,MAAM,UAAU,GAAG,WAAW;AAAA,yEAAC,kBAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACR,UAAU,CAAC,UAAX,CAAsB,OAAtB,CADQ;;AAAA;AACvB,cAAA,MADuB;AAAA,gDAEtB,MAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAG3B,EAH2B,CAA9B;AAKA,MAAM,QAAQ,GAAG,WAAW;AAAA,yEAAC,kBAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACN,UAAU,CAAC,QAAX,CAAoB,OAApB,CADM;;AAAA;AACrB,cAAA,MADqB;AAAA,gDAEpB,MAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAGzB,EAHyB,CAA5B;AAKA,MAAM,SAAS,GAAG,WAAW;AAAA,yEAAC,kBAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACP,UAAU,CAAC,SAAX,CAAqB,OAArB,CADO;;AAAA;AACtB,cAAA,MADsB;AAAA,gDAErB,MAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAG1B,EAH0B,CAA7B;AAKA,SAAO;AACL,IAAA,MAAM,EAAN,MADK;AAEL,IAAA,UAAU,EAAV,UAFK;AAGL,IAAA,QAAQ,EAAR,QAHK;AAIL,IAAA,SAAS,EAAT,SAJK;AAKL,IAAA,WAAW,EAAE;AALR,GAAP;AAOD","sourceRoot":"","sourcesContent":["import { useCallback } from 'react';\nimport { Plugins } from '@capacitor/core';\nimport { isFeatureAvailable } from '../util/feature-check';\nexport const availableFeatures = {\n    useFileSystem: isFeatureAvailable('FileSystem', 'useFileSystem')\n};\nexport function useFilesystem() {\n    const { Filesystem } = Plugins;\n    const getUri = useCallback(async (options) => {\n        const result = await Filesystem.getUri(options);\n        return result;\n    }, []);\n    const deleteFile = useCallback(async (options) => {\n        const result = await Filesystem.deleteFile(options);\n        return result;\n    }, []);\n    const readFile = useCallback(async (options) => {\n        const result = await Filesystem.readFile(options);\n        return result;\n    }, []);\n    const writeFile = useCallback(async (options) => {\n        const result = await Filesystem.writeFile(options);\n        return result;\n    }, []);\n    return {\n        getUri,\n        deleteFile,\n        readFile,\n        writeFile,\n        isAvailable: true\n    };\n}\n//# sourceMappingURL=useFileSystem.js.map"]},"metadata":{},"sourceType":"module"}