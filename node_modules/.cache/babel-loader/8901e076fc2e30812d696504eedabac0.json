{"ast":null,"code":"// Inspired by useLocalStorage from https://usehooks.com/useLocalStorage/\nimport { useState, useEffect, useCallback } from 'react';\nimport { Plugins } from '@capacitor/core';\nimport { notAvailable } from '../util/models';\nimport { isFeatureAvailable, featureNotAvailableError } from '../util/feature-check';\nexport const availableFeatures = {\n  useStorage: isFeatureAvailable('Storage', 'useStorage')\n};\nexport function useStorage() {\n  const {\n    Storage\n  } = Plugins;\n\n  if (!availableFeatures.useStorage) {\n    return Object.assign({\n      get: featureNotAvailableError,\n      set: featureNotAvailableError,\n      remove: featureNotAvailableError,\n      getKeys: featureNotAvailableError,\n      clear: featureNotAvailableError\n    }, notAvailable);\n  }\n\n  const get = useCallback(async key => {\n    const v = await Storage.get({\n      key\n    });\n\n    if (v) {\n      return v.value;\n    }\n\n    return null;\n  }, []);\n  const set = useCallback((key, value) => {\n    return Storage.set({\n      key,\n      value: value\n    });\n  }, []);\n  const remove = useCallback(key => {\n    return Storage.remove({\n      key\n    });\n  }, []);\n  const getKeys = useCallback(() => {\n    return Storage.keys();\n  }, []);\n  const clear = useCallback(() => {\n    return Storage.clear();\n  }, []);\n  return {\n    get,\n    set,\n    remove,\n    getKeys,\n    clear,\n    isAvailable: true\n  };\n}\nexport function useStorageItem(key, initialValue) {\n  const {\n    Storage\n  } = Plugins;\n\n  if (!availableFeatures.useStorage) {\n    return [undefined, featureNotAvailableError, false];\n  }\n\n  const [storedValue, setStoredValue] = useState();\n  useEffect(() => {\n    async function loadValue() {\n      try {\n        const result = await Storage.get({\n          key\n        });\n\n        if (result.value == undefined && initialValue != undefined) {\n          result.value = typeof initialValue === \"string\" ? initialValue : JSON.stringify(initialValue);\n          setValue(result.value);\n        } else {\n          setStoredValue(typeof result.value === 'string' ? result.value : JSON.parse(result.value));\n        }\n      } catch (e) {\n        return initialValue;\n      }\n    }\n\n    loadValue();\n  }, [Storage, setStoredValue, initialValue, key]);\n\n  const setValue = async value => {\n    try {\n      setStoredValue(value);\n      await Storage.set({\n        key,\n        value: typeof value === \"string\" ? value : JSON.stringify(value)\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return [storedValue, setValue, true];\n}","map":{"version":3,"sources":["../../src/storage/useStorage.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// Inspired by useLocalStorage from https://usehooks.com/useLocalStorage/\nimport { useState, useEffect, useCallback } from 'react';\nimport { Plugins } from '@capacitor/core';\nimport { notAvailable } from '../util/models';\nimport { isFeatureAvailable, featureNotAvailableError } from '../util/feature-check';\nexport const availableFeatures = {\n    useStorage: isFeatureAvailable('Storage', 'useStorage')\n};\nexport function useStorage() {\n    const { Storage } = Plugins;\n    if (!availableFeatures.useStorage) {\n        return Object.assign({ get: featureNotAvailableError, set: featureNotAvailableError, remove: featureNotAvailableError, getKeys: featureNotAvailableError, clear: featureNotAvailableError }, notAvailable);\n    }\n    const get = useCallback(async (key) => {\n        const v = await Storage.get({ key });\n        if (v) {\n            return v.value;\n        }\n        return null;\n    }, []);\n    const set = useCallback((key, value) => {\n        return Storage.set({ key, value: value });\n    }, []);\n    const remove = useCallback((key) => {\n        return Storage.remove({ key });\n    }, []);\n    const getKeys = useCallback(() => {\n        return Storage.keys();\n    }, []);\n    const clear = useCallback(() => {\n        return Storage.clear();\n    }, []);\n    return { get, set, remove, getKeys, clear, isAvailable: true };\n}\nexport function useStorageItem(key, initialValue) {\n    const { Storage } = Plugins;\n    if (!availableFeatures.useStorage) {\n        return [\n            undefined,\n            featureNotAvailableError,\n            false\n        ];\n    }\n    const [storedValue, setStoredValue] = useState();\n    useEffect(() => {\n        async function loadValue() {\n            try {\n                const result = await Storage.get({ key });\n                if (result.value == undefined && initialValue != undefined) {\n                    result.value = typeof initialValue === \"string\" ? initialValue : JSON.stringify(initialValue);\n                    setValue(result.value);\n                }\n                else {\n                    setStoredValue(typeof result.value === 'string' ? result.value : JSON.parse(result.value));\n                }\n            }\n            catch (e) {\n                return initialValue;\n            }\n        }\n        loadValue();\n    }, [Storage, setStoredValue, initialValue, key]);\n    const setValue = async (value) => {\n        try {\n            setStoredValue(value);\n            await Storage.set({ key, value: typeof value === \"string\" ? value : JSON.stringify(value) });\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    return [\n        storedValue,\n        setValue,\n        true\n    ];\n}\n//# sourceMappingURL=useStorage.js.map"]},"metadata":{},"sourceType":"module"}