{"ast":null,"code":"import { Capacitor } from '@capacitor/core';\nimport { FeatureNotAvailableError } from './models';\nconst allTrue = {\n  web: true,\n  ios: true,\n  android: true,\n  electron: true\n};\nconst featureMap = {\n  Accessibility: {\n    isScreenReaderAvailable: Object.assign(Object.assign({}, allTrue), {\n      web: false\n    }),\n    speak: {\n      web: 'speechSynthesis' in window,\n      ios: true,\n      android: true,\n      electron: true\n    }\n  },\n  App: {\n    state: allTrue,\n    getLaunchUrl: Object.assign(Object.assign({}, allTrue), {\n      web: false\n    }),\n    appUrlOpen: Object.assign(Object.assign({}, allTrue), {\n      web: false\n    })\n  },\n  Browser: {\n    open: allTrue,\n    prefetch: Object.assign(Object.assign({}, allTrue), {\n      web: false\n    }),\n    close: Object.assign(Object.assign({}, allTrue), {\n      web: false\n    })\n  },\n  Camera: {\n    getPhoto: allTrue\n  },\n  Clipboard: {\n    useClipboard: Object.assign(Object.assign({}, allTrue), {\n      web: 'clipboard' in navigator\n    })\n  },\n  Device: {\n    getInfo: allTrue,\n    getLanguageCode: allTrue\n  },\n  FileSystem: {\n    useFileSystem: allTrue\n  },\n  Geolocation: {\n    getCurrentPosition: Object.assign(Object.assign({}, allTrue), {\n      web: 'geolocation' in navigator\n    }),\n    watchPosition: Object.assign(Object.assign({}, allTrue), {\n      web: 'geolocation' in navigator\n    })\n  },\n  Network: {\n    getStatus: allTrue\n  },\n  Platform: {\n    getPlatform: allTrue\n  },\n  Storage: {\n    useStorage: allTrue\n  }\n};\nexport function isFeatureAvailable(plugin, method) {\n  if (Capacitor.isPluginAvailable(plugin) && !!featureMap[plugin][method][Capacitor.platform]) {\n    return true;\n  }\n\n  return false;\n}\nexport function featureNotAvailableError() {\n  throw new FeatureNotAvailableError();\n}","map":{"version":3,"sources":["../../src/util/feature-check.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Capacitor } from '@capacitor/core';\nimport { FeatureNotAvailableError } from './models';\nconst allTrue = {\n    web: true,\n    ios: true,\n    android: true,\n    electron: true\n};\nconst featureMap = {\n    Accessibility: {\n        isScreenReaderAvailable: Object.assign(Object.assign({}, allTrue), { web: false }),\n        speak: {\n            web: 'speechSynthesis' in window,\n            ios: true,\n            android: true,\n            electron: true\n        }\n    },\n    App: {\n        state: allTrue,\n        getLaunchUrl: Object.assign(Object.assign({}, allTrue), { web: false }),\n        appUrlOpen: Object.assign(Object.assign({}, allTrue), { web: false })\n    },\n    Browser: {\n        open: allTrue,\n        prefetch: Object.assign(Object.assign({}, allTrue), { web: false }),\n        close: Object.assign(Object.assign({}, allTrue), { web: false })\n    },\n    Camera: {\n        getPhoto: allTrue\n    },\n    Clipboard: {\n        useClipboard: Object.assign(Object.assign({}, allTrue), { web: 'clipboard' in navigator }),\n    },\n    Device: {\n        getInfo: allTrue,\n        getLanguageCode: allTrue\n    },\n    FileSystem: {\n        useFileSystem: allTrue\n    },\n    Geolocation: {\n        getCurrentPosition: Object.assign(Object.assign({}, allTrue), { web: 'geolocation' in navigator }),\n        watchPosition: Object.assign(Object.assign({}, allTrue), { web: 'geolocation' in navigator })\n    },\n    Network: {\n        getStatus: allTrue\n    },\n    Platform: {\n        getPlatform: allTrue\n    },\n    Storage: {\n        useStorage: allTrue,\n    }\n};\nexport function isFeatureAvailable(plugin, method) {\n    if (Capacitor.isPluginAvailable(plugin) && !!featureMap[plugin][method][Capacitor.platform]) {\n        return true;\n    }\n    return false;\n}\nexport function featureNotAvailableError() {\n    throw new FeatureNotAvailableError();\n}\n//# sourceMappingURL=feature-check.js.map"]},"metadata":{},"sourceType":"module"}